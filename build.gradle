buildscript {
	ext {
		kotlinVersion = '1.2.70'
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
		classpath('com.github.ksoichiro:gradle-console-reporter:0.5.0')
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin : 'kotlin-jpa'
apply plugin: 'com.github.ksoichiro.console.reporter'

group = 'co.enoobong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

allOpen {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}

test {
	useJUnitPlatform()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation('org.liquibase:liquibase-core')

	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')

	testImplementation 'com.openpojo:openpojo:0.8.10'
	testImplementation 'nl.jqno.equalsverifier:equalsverifier:2.4.8'
	testImplementation'org.springframework.boot:spring-boot-starter-aop'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude	 module : 'junit'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation'com.nhaarman:mockito-kotlin:1.6.0'
}

jacocoTestReport {
	group = "Reporting"
	description = "Generate Jacoco coverage report."
	reports {
        html.enabled = true
		xml.enabled = false
		csv.enabled = false
		html.setDestination(file("${buildDir}/reports/coverage"))
	}
}

